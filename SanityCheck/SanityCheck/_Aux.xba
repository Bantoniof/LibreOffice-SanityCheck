<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="_Aux" script:language="StarBasic" script:moduleType="normal"> Rem  *****  BASIC  Módulo _Aux *****
 Rem Este módulo forma parte de la extensión SanityCheck
 Rem Autor: bantoniof@libreoffice.org
 Rem Licencia GNU v3 o posterior
 
 Option Explicit
 
 Rem ############
Function F_Guardado() As boolean
   Call L10n.Trad_Aux
   If  ThisComponent.HasLocation = False Then 
     MsgBox (A_Txt(10), 0+48+0, Extension)
    F_Guardado = 0
   Else 
     F_Guardado = 1
   End If
End Function

 Rem ########
Sub DirectorioPlantillas
   If F_DirPlantillas = 0 then
     Trad_Aux
     Msgbox (A_Txt(9), 0+64+0, Extension)
     Call Plantilla.Dlg_Plantillas
   end If
End Sub

Function F_DirPlantillas() As Boolean
 Dim oDocprops : oDocprops = ThisComponent.getDocumentProperties
   If oDocprops.TemplateName = &quot;&quot; Then : F_DirPlantillas = False : exit Function : End If
 Dim Asociada() : Asociada = split (oDocprops.TemplateURL,&quot;/&quot;)
 Dim Ext() : Ext = Split(F_Pathextension,&quot;/&quot;)
 Dim elementos
   elementos = Ubound(asociada())
   Redim Preserve Asociada(elementos - 5)
   elementos = Ubound(Ext())
   Redim Preserve Ext(elementos - 1)
   If Asociada(Ubound(Asociada)) &lt;&gt; Ext(Ubound(Ext)) then
     F_DirPlantillas = False
   Else 
     F_DirPlantillas = True  
   end If
End Function

 Rem ############
Function F_EstilosPlantilla() As Integer &apos;comprueba Estilos, si no están devuelve un número y presenta las faltas
 Dim  oEstilos As Object, oEstilo As Variant, i As Integer, contador as integer
 Dim sEnumera As String, s As String
 Dim oDocprops As Object : oDocprops = ThisComponent.getDocumentProperties
   Call L10n.Trad_Aux
   Call CargaEstilos_PU_Guias
   For i = 0 to UBound(estiloPU)
     oEstilos = ThisComponent.StyleFamilies.getByName(&quot;ParagraphStyles&quot;)
     oEstilo = estiloPu(i)
     If Not oEstilos.hasByName(oEstilo) Then
       contador = contador + 1
       s = s &amp; Chr(13) &amp; Chr(9) &amp; oestilo 
     End If
   next
   If Contador &lt;&gt; 0 then
     If oDocprops.TemplateName &lt;&gt; &quot;&quot; Then
       sEnumera = A_Txt(5) &amp; oDocprops.TemplateName
     Else 
       sEnumera = A_Txt(6)  
     End If
     Msgbox (A_Txt(7) &amp; s &amp; Chr(13) &amp; sEnumera &amp; Chr(13) &amp; A_Txt(8),0+16+0, A_Txt(4) &amp; Extension)
   End If  
   F_EstilosPlantilla = Contador
End Function 

 Rem ############
Function F_TipoDoc
   Call L10n.Trad_Plantilla
 Dim Archivo : Archivo = ThisComponent.getUrl 
 Dim Nombre : Nombre = Filenameoutofpath(Archivo)
 Dim Ext : Ext = GetFileNameExtension(Archivo)
 Dim cuenta
   Select Case UCase(Ext)
     Case&quot;ODM&quot;
       F_TipoDoc = &quot;Maestro&quot;
     Case &quot;OTT&quot;,&quot;OTM&quot;
       F_TipoDoc = &quot;Plantilla&quot; 
     Case &quot;ODT&quot;
       If left(nombre,2) &lt;&gt; &quot;BG&quot; XOR left(nombre,2) &lt;&gt; &quot;CG&quot; XOR _
         left(nombre,2) &lt;&gt; &quot;DG&quot; XOR  left(nombre,2) &lt;&gt; &quot;GS&quot; XOR _
         left(nombre,2) &lt;&gt; &quot;IG&quot; XOR  left(nombre,2) &lt;&gt; &quot;MG&quot; XOR _
         left(nombre,2) &lt;&gt; &quot;WG&quot; Then
         F_TipoDoc = &quot;Documento&quot;
         Exit Function
       Else
         cuenta = left(Nombre,6) : cuenta = right(cuenta,4)
         If Not isNumeric(cuenta) then
           F_TipoDoc = &quot;Guia&quot;
           Exit Function
         ElseIf isNumeric(cuenta) Then
           F_TipoDoc = &quot;Capitulo&quot;
         End If
       End If
     Case else 
       F_TipoDoc =&quot;Otro&quot;
   End select
End Function

 Rem ############
Function F_VersGuia As integer
 &apos;Devuelve la versión de la guía en que se trabaja
 &apos;en función del nombre de archivo
   Call L10n.Trad_Plantilla
 Dim Archivo : Archivo = ThisComponent.getUrl 
 Dim Nombre : Nombre = Filenameoutofpath(Archivo)
 Dim cuenta
   cuenta = left(Nombre,4) : cuenta = right(cuenta,2)
   cuenta = Cint(cuenta)
   If cuenta &gt; 30 then 
     F_VersGuia = cuenta / 10
   else
     F_VersGuia = cuenta
   End If  
End Function

 Rem ############
Function F_Control_Cambios As boolean &apos;lst346 
Rem Comprueba Control de cambios y cambios pendientes aceptar/rechazar
   Call L10n.Trad_Aux
   If ThisComponent.RecordChanges Then
     Msgbox (A_Txt(11) &amp; A_Txt(13), 0+48+0,Extension)
     F_Control_Cambios =1
     Exit Function
   End If 
 Dim i As Integer 
 Dim oParEnum As Object, oSecEnum As Object
 Dim oPar As Object, oParSection As Object
   oParEnum = ThisComponent.Text.createEnumeration()
   Do While oParEnum.hasMoreElements()
     oPar = oParEnum.nextElement()
     If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
       oSecEnum = oPar.createEnumeration()
       Do While oSecEnum.hasMoreElements()
         oParSection = oSecEnum.nextElement()
         If oparsection.Textportiontype = &quot;Redline&quot; then 
         i = i +1
         End If
       Loop
    End If
   Loop
   If i &gt; 0 then 
     MsgBox (A_Txt(12) &amp; A_Txt(13), 0+48+0, Extension) 
     F_Control_Cambios = 1
   End if
End Function

 Rem ############
Function F_Prueba_Sel()As Boolean &apos;pasar prueba selección
 Rem Devuelve 1 si estamos en texto y podemos continuar (correcto)
 Rem Devuelve 0 si estamos en un objeto o sucede otro error (mal)
 Call L10n.Trad_Aux
 Dim dispatcher As Object, oSel As Object
   oSel= ThisComponent.getCurrentSelection
   On Error GoTo ERRORES
   If Not oSel.supportsService(&quot;com.sun.star.text.TextRanges&quot;) Then &apos;salgo de selección con escape.
     dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;) 
     dispatcher.executeDispatch(ThisComponent.CurrentController.frame, &quot;.uno:Escape&quot;, &quot;&quot;, 0, Array())
     MsgBox (A_Txt(1) &amp; Chr(13) &amp; Chr(13) &amp; A_Txt(3), 0+0+64, Extension)&apos;Cursor en un objeto
     F_Prueba_Sel = 0
     Exit Function
   End If

ERRORES:
   If Err = 0 Then : F_Prueba_Sel = 1 : Exit Function
   ElseIf Err = 91 Then : MsgBox  (A_Txt(2) &amp; Chr(13) &amp; Chr(13) &amp; A_Txt(3), 0+64+0, Extension)&apos; Cursor en comentario
   ElseIf Err &lt;&gt; 0 Then : MsgBox (&quot;Error n.&quot; &amp; Err  &amp; &quot;  Linea n. &quot; &amp; Erl &amp; Chr(13) &amp; Error, 0+48+0, &quot;Error&quot; &amp; Extension)
   End If
   F_Prueba_Sel = 0
End Function

 Rem ############
Sub Carga_Tools
   If GlobalScope.BasicLibraries.hasByName(&quot;Tools&quot;) Then
     If Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;) Then
       GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
     End If
   Else
     MsgBox (&quot;La biblioteca Tools no existe , la macro dará errores&quot;, 0+48+0, Extension)
   End If
End Sub

 Rem ############
Function F_Conv (Color As String ) As Long
 Dim a : a() = Split(Color,&quot;,&quot;)
   F_Conv =  RGB(a(0),a(1),a(2))
End Function

 Rem ############
Function F_LOVersion() As Double
 Rem Devuelve la versión de LibreOffice instalada
 Rem ==================================
 Dim oSet, oCfgProvider
 Dim aAux(0) As New com.sun.star.beans.PropertyValue
   oCfgProvider = CreateUNOService(&quot;com.sun.star.configuration.ConfigurationProvider&quot;)
   aAux(0).Name = &quot;nodepath&quot;
   aAux(0).Value = &quot;/org.openoffice.Setup/Product&quot;
   oSet = oCfgProvider.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationAccess&quot;, aAux())
 Rem Corrige problema separador decimal (config. Regional)
 Rem Basic opera con . pero las conversiones las hace con coma en Español o punto en inglés
 Rem En español CDbl(&quot;7.5&quot;) = 75 / CDbl(&quot;7,5&quot;)= 7,5
 Dim s : s = split(oSet.getByName(&quot;ooSetupVersion&quot;),&quot;.&quot;) 
 Dim C : C = CDbl(s(0)) + CDbl(s(1))/10 
   F_LOVersion = C
End Function

 Rem ############
Function F_PathExtension
 Dim sv
   sv = GetDefaultContext.getByName(&quot;/singletons/com.sun.star.deployment.PackageInformationProvider&quot;)
   F_PathExtension = sv.getPackageLocation(&quot;vnd.bantoniof.sanitycheck&quot;) 
End Function

 Rem ############
  Rem Devuelve la versión SanityCheck
Function F_Extension
 dim sv As Object, e as variant, x as variant
   sv = GetDefaultContext().getByName(&quot;/singletons/com.sun.star.deployment.PackageInformationProvider&quot;)
   e = sv.getExtensionList()
   for each x in e
     if  x(0) = &quot;vnd.bantoniof.sanitycheck&quot;  then
       F_Extension = &quot;  SanityCheck &quot; &amp; x(1)
       Exit Function
     end if
   next
   F_Extension = &quot;  SanityCheck X.x (no instalada)&quot;
End Function

 Rem ############
Sub ImplParaStyleCheck(Matriz As Object, oParEnum As Object)
 Rem Ayuda para la función F_ComentarParrafos
 Rem ======================================================
 Dim oPar As Object, oCursor As Object
 Dim bFound As Boolean, sStyle As String, i As Integer
   Do While oParEnum.hasMoreElements()
     oPar = oParEnum.nextElement()
     If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
       sStyle = oPar.ParaStyleName
       bFound = False&apos; Reset
       For i = 0 To UBound(Matriz)
         If sStyle = Matriz(i) Then
           bFound = True
         End If
       Next
       If (bFound) = True Then
         oCursor = oPar.getText().createTextCursorByRange(oPar)
         oCursor.gotoEndOfParagraph(False)
        Call _Aux.InsertAnnotation (oPar, oCursor, sStyle &amp; Chr(13) &amp; E_Txt(17), E_Txt(0) )
        Contador= Contador +1
       End If
     End If
   Loop
End Sub

 Rem ############
Sub InsertAnnotation(oParSection As Object, oCursor As Object, stexto As String, Optional Autor)
 Dim Fecha As New com.sun.star.util.DateTime
   If IsMissing(Autor) Then : Autor = F_Extension : End If
   With Fecha
     .Day = Day(Now) : .Month = Month(Now): .Year = Year(Now)
     .Hours = Hour(Now) : .Minutes = Minute(Now) : .Seconds = Second(Now)
   End With
 Dim oAnno As Object
   oAnno = ThisComponent.createInstance(&quot;com.sun.star.text.TextField.Annotation&quot;)
   oAnno.Content = stexto
   oAnno.Author = Autor &apos;_Aux.F_NombreUsuario
   oAnno.DateTimeValue = Fecha
   oParSection.Text.insertTextContent(oCursor, oAnno, True)
End Sub

 Rem ############
Function F_NombreUsuario
 Dim aProps(0) As New com.sun.star.beans.PropertyValue
 Dim oRegKey, oConfig As Object
   aProps(0).Name  = &quot;nodepath&quot;
   aProps(0).Value = &quot;/org.openoffice.UserProfile/Data/&quot;
   oConfig = CreateUNOService(&quot;com.sun.star.configuration.ConfigurationProvider&quot;)
   oRegKey = oConfig.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationUpdateAccess&quot;, aProps())
   F_NombreUsuario = oRegKey.givenname &amp; &quot; &quot; &amp; oRegKey.sn
End Function

 Rem ############
Function F_Consulta_UDP(ByVal Propiedad)
 Dim oUDP : oUDP = ThisComponent.getDocumentProperties().UserDefinedProperties
   If Not oUDP.getPropertySetInfo().hasPropertyByName(Propiedad) Then
     F_Consulta_UDP = &quot;&quot;
   Else
     F_Consulta_UDP = oUDP.getPropertyValue(Propiedad)
   End If
End Function

 Rem ############
Sub F_Elimina_UDP(sProp)
 Dim oUDP
   oUDP = ThisComponent.getDocumentProperties().UserDefinedProperties
   If Ucase(GetFileNameExtension(ThisComponent.getURL)) = &quot;ODT&quot;  _
      AND oUDP.getPropertySetInfo().hasPropertyByName(sProp)   Then
     Establece_UDP (sProp, sProp &amp; C_Txt(15))
     oUDP.RemoveProperty(sProp)
   end If
End Sub

 Rem ############
Sub Establece_UDP(sProp, sVal)
 Dim oDocprops : oDocprops = ThisComponent.getDocumentProperties()
 Dim oUDP : oUDP = oDocprops().UserDefinedProperties
   If Not oUDP.getPropertySetInfo().hasPropertyByName(sProp) Then
     oUDP.addProperty(sProp, _
     com.sun.star.beans.PropertyAttribute.MAYBEVOID + _
     com.sun.star.beans.PropertyAttribute.REMOVEABLE + _
     com.sun.star.beans.PropertyAttribute.MAYBEDEFAULT, sVal)
    Else
     oUDP.setPropertyValue(sProp, sVal)
    End If
&apos;removeProperty(name)
End Sub

 Rem ############
 Rem Evita comentarios duplicados al ejecutar 2 veces
 Rem una macro que pone comentarios
 Rem ====================================================== 
Sub EliminaComentarios(Autor)
&apos;   If _Aux.F_Prueba_Sel = 0 Then : Exit Sub : End If
 Dim oEnum As Object, oField As Object, s As String
   oEnum = ThisComponent.getTextFields().createEnumeration()
   Do While oEnum.hasMoreElements()
     oField = oEnum.nextElement()
     If oField.supportsService(&quot;com.sun.star.text.TextField.Annotation&quot;) Then
       s = oField.Author
       If s = Autor Then
         oField.dispose()
       End If
     End If
   Loop
End Sub

 Rem ############
Function F_BuscarEnMatriz(Matriz(), Texto As String) As Boolean
 Rem busca texto en matriz,
 Rem Devuelve True o 1 si encuentra el texto en la matriz
 Rem Devuelve False o 0 si no lo encuentra
 Rem ======================================================
 Dim i As Integer
   For i = LBound(Matriz) To UBound(Matriz())
     If InStr(Join(Matriz), Texto) &lt;&gt; 0 Then
       F_BuscarEnMatriz = 1
       Exit Function
     End If
   Next i
   F_BuscarEnMatriz = 0
End Function

 Rem ############
Function F_ElementoEnMatriz(Matriz(), IndiceSup As Integer, Elemento As String) As Boolean
 Rem variante de BuscarEnMatriz pero indicando el índice mayor en el que buscar
 Rem útil si se quiere saber, por ejemplo, si está entre los 10 primeros.
 Rem Devuelve True o 1 si lo encuentra en la matriz
 Rem Devuelve False o O si no lo encunentra
 Rem ======================================================
 Dim i As Integer
   For i = LBound(Matriz()) To IndiceSup
     If UCase(Matriz(i)) = UCase(Elemento) Then
       F_ElementoEnMatriz = 1
       Exit Function
     End If
     Next
     F_ElementoEnMatriz = 0
End Function

 Rem ############
Function F_RestaMatrices(Grande, Chica) As Variant
 Rem Resta a la matriz Grande los elementos definidos
 Rem en la matriz Chica (si existen)
 Rem ======================================================
 Dim i As Integer, Resultado() As Variant, n As Integer
   For i = 0 To UBound(Chica)
     If FieldInArray(Grande(), UBound(Grande), Chica(i)) = False Then
       If UBound(Resultado) = -1 Then
         ReDim Resultado(0)
         Resultado(0) = Chica(i)
       Else
         n = UBound(Resultado) +1
         ReDim Preserve Resultado(n)
         Resultado(n) = Chica(i)
       End If
     End If
   Next
   F_RestaMatrices = Resultado
End Function

 Rem ############
Function F_MatrizCuadroTexto(Matriz As Variant) As String
 Rem Convierte una matriz en texto con saltos de linea
 Rem para mostrar su contenido en Msgbox o cuadros de texto
 Rem ======================================================
 Dim i As Integer, s As String
   For i = 0 To UBound(Matriz)
     s = s &amp; Chr(9) &amp; Matriz(i) &amp; CHR$(13) &apos;matriz(1)
   Next
   F_MatrizCuadroTexto = s
End Function

 Rem ############ posible incorporación? Recargar documento.
Sub ActualizarTodo
 Dim document   As Object
 Dim dispatcher As Object
   document   = ThisComponent.CurrentController.Frame
   dispatcher = CreateUNOService(&quot;com.sun.star.frame.DispatchHelper&quot;)
   dispatcher.executeDispatch(document, &quot;.uno:UpdateAll&quot;, &quot;&quot;, 0, Array())
End Sub

 Rem ############
Function Prot_Indice (protege As Boolean)
Dim oIndexes As Object, oIndex As Object, i As integer 
   oIndexes = ThisComponent.getDocumentIndexes()
   For i = 0 To oIndexes.getCount() - 1
     oIndex = oIndexes.getByIndex(i)
     If oIndex.supportsService(&quot;com.sun.star.text.ContentIndex&quot;) Then
       If oIndex.IsProtected = 1 And Protege = 0 then 
         oIndex.protect = 0
       ElseIf oIndex.IsProtected = 0 and Protege = 1 then
         oIndex.protected = 1
       End If
     End If 
   Next
End Function

 Rem ############
Sub GuardaRecarga
   If (ThisComponent.isModified()) Then
     If (ThisComponent.hasLocation() AND (Not ThisComponent.isReadOnly())) Then
       ThisComponent.store()
     Else
       setModified(False)
     End If
   End If
 Dim document   as object
 Dim dispatcher as object
   document   = ThisComponent.CurrentController.Frame
   dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
   dispatcher.executeDispatch(document, &quot;.uno:Reload&quot;, &quot;&quot;, 0, Array())
End Sub

 Rem ############
Function F_NtoDN (estilo as String)
 Rem Devuelve el Nombre del estilo localizado (Párrafos)
 Dim Parrafos : Parrafos = ThisComponent.StyleFamilies.ParagraphStyles
   If Parrafos.hasbyname(estilo) Then
     F_NtoDN = Parrafos.getbyName(estilo).DisplayName
   End If
End Function
&apos;============================== Fin _Aux =================================
</script:module>